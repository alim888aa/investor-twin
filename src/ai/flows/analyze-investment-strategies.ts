// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that analyzes investment strategies based on a username and investor twins.
 *
 * - analyzeInvestmentStrategies - A function that analyzes investment strategies.
 * - AnalyzeInvestmentStrategiesInput - The input type for the analyzeInvestmentStrategies function.
 * - AnalyzeInvestmentStrategiesOutput - The return type for the analyzeInvestmentStrategies function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeInvestmentStrategiesInputSchema = z.object({
  username: z.string().describe('The username of the investor.'),
  twins: z.array(
    z.object({
      name: z.string().describe('The name of the investor twin.'),
      score: z.number().describe('The similarity score of the investor twin.'),
    })
  ).describe('An array of investor twins with their names and similarity scores.'),
});
export type AnalyzeInvestmentStrategiesInput = z.infer<typeof AnalyzeInvestmentStrategiesInputSchema>;

const AnalyzeInvestmentStrategiesOutputSchema = z.object({
  analysis: z.string().describe('A detailed analysis of the investment strategies, highlighting similarities and potential new investments.'),
});
export type AnalyzeInvestmentStrategiesOutput = z.infer<typeof AnalyzeInvestmentStrategiesOutputSchema>;

export async function analyzeInvestmentStrategies(input: AnalyzeInvestmentStrategiesInput): Promise<AnalyzeInvestmentStrategiesOutput> {
  return analyzeInvestmentStrategiesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeInvestmentStrategiesPrompt',
  input: {schema: AnalyzeInvestmentStrategiesInputSchema},
  output: {schema: AnalyzeInvestmentStrategiesOutputSchema},
  prompt: `You are an expert financial analyst. Analyze the investment strategies of the user {{username}} and their investor twins to provide a detailed report highlighting similarities and potential new investments.

User: {{username}}
Investor Twins:
{{#each twins}}
- Name: {{name}}, Similarity Score: {{score}}
{{/each}}

Analysis:`,
});

const analyzeInvestmentStrategiesFlow = ai.defineFlow(
  {
    name: 'analyzeInvestmentStrategiesFlow',
    inputSchema: AnalyzeInvestmentStrategiesInputSchema,
    outputSchema: AnalyzeInvestmentStrategiesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
